name: Build Chimera Binary

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g. v1.0.0)'
        required: true
        default: 'v1.0.0'

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create Tag
      run: |
        git tag ${{ github.event.inputs.version }}
        git push origin ${{ github.event.inputs.version }}
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: Release ${{ github.event.inputs.version }}
        draft: false
        prerelease: false
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: [i686-unknown-linux-musl, x86_64-pc-windows-gnu]
    
    - name: Install cross
      run: cargo install cross --git https://github.com/cross-rs/cross
    
    # Linux Build
    - name: Build Linux Target
      run: |
        cd chimera
        cross build --target i686-unknown-linux-musl --release
        mkdir -p release-artifacts
        find . -type f -name "chimera" -exec cp {} release-artifacts/chimera \;
    
    - name: Upload Linux Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release-artifacts/chimera
        asset_name: chimera
        asset_content_type: application/octet-stream
    
    # Windows Build
    - name: Build Windows Target
      run: |
        cd chimera
        cross build --target x86_64-pc-windows-gnu --release
        mkdir -p release-artifacts
        find . -type f -name "chimera.exe" -exec cp {} release-artifacts/chimera.exe \;
    
    - name: Upload Windows Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release-artifacts/chimera.exe
        asset_name: chimera.exe
        asset_content_type: application/octet-stream
